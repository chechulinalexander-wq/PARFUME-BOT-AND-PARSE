import sqlite3
import sys
import io
import json
import os

# –§–∏–∫—Å –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8', errors='replace')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8', errors='replace')

def view_images(news_id=None):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏"""
    conn = sqlite3.connect('fragrantica_news.db')
    cursor = conn.cursor()
    
    if news_id:
        cursor.execute('SELECT id, title, images FROM news WHERE id = ?', (news_id,))
        news = cursor.fetchone()
        
        if news:
            news_id, title, images_json = news
            print(f"ID: {news_id}")
            print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
            print(f"\n{'='*80}\n")
            
            if images_json:
                try:
                    images = json.loads(images_json)
                    print(f"üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}\n")
                    
                    for i, img_path in enumerate(images, 1):
                        exists = "‚úì" if os.path.exists(img_path) else "‚úó"
                        size = ""
                        if os.path.exists(img_path):
                            size_kb = os.path.getsize(img_path) / 1024
                            size = f" ({size_kb:.1f} KB)"
                        
                        print(f"{i}. {exists} {img_path}{size}")
                    
                except json.JSONDecodeError:
                    print("‚úó –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            else:
                print("‚äò –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç")
        else:
            print(f"‚úó –ù–æ–≤–æ—Å—Ç—å —Å ID {news_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        cursor.execute('''
            SELECT id, title, images
            FROM news 
            ORDER BY id DESC
        ''')
        
        print("=== –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö ===\n")
        
        total_news = 0
        total_images = 0
        
        for row in cursor.fetchall():
            news_id, title, images_json = row
            total_news += 1
            
            count = 0
            if images_json:
                try:
                    images = json.loads(images_json)
                    count = len(images)
                    total_images += count
                except:
                    pass
            
            status = f"{count} –∏–∑–æ–±—Ä." if count > 0 else "–Ω–µ—Ç –∏–∑–æ–±—Ä."
            print(f"ID: {news_id:2d} | {status:15s} | {title[:60]}")
        
        print(f"\n{'='*80}")
        print(f"–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {total_news}")
        print(f"–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images}")
        print(f"–°—Ä–µ–¥–Ω–µ –Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: {total_images/total_news:.1f}")
        print(f"\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: python view_images.py <ID>")
    
    conn.close()

if __name__ == '__main__':
    if len(sys.argv) > 1:
        try:
            news_id = int(sys.argv[1])
            view_images(news_id)
        except ValueError:
            print("‚úó ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    else:
        view_images()



