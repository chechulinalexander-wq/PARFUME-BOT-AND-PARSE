import sqlite3
import sys
import io
import requests

# –§–∏–∫—Å –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8', errors='replace')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8', errors='replace')

def get_config(key):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ –ë–î"""
    conn = sqlite3.connect('fragrantica_news.db')
    cursor = conn.cursor()
    cursor.execute('SELECT value FROM config WHERE key = ?', (key,))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else None

def test_bot_token(bot_token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞"""
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Bot Token...")
    
    url = f"https://api.telegram.org/bot{bot_token}/getMe"
    
    try:
        response = requests.get(url, timeout=10)
        result = response.json()
        
        if result.get('ok'):
            bot_info = result['result']
            print(f"   ‚úì –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π")
            print(f"   Bot: @{bot_info['username']}")
            print(f"   ID: {bot_info['id']}")
            print(f"   –ò–º—è: {bot_info['first_name']}")
            return True
        else:
            print(f"   ‚úó –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω: {result.get('description')}")
            return False
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
        return False

def test_channel_access(bot_token, channel_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É"""
    print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É: {channel_id}")
    
    url = f"https://api.telegram.org/bot{bot_token}/getChat"
    
    try:
        response = requests.post(url, json={"chat_id": channel_id}, timeout=10)
        result = response.json()
        
        if result.get('ok'):
            chat_info = result['result']
            print(f"   ‚úì –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –µ—Å—Ç—å")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {chat_info.get('title', 'N/A')}")
            print(f"   –¢–∏–ø: {chat_info.get('type', 'N/A')}")
            if 'username' in chat_info:
                print(f"   Username: @{chat_info['username']}")
            return True
        else:
            error_desc = result.get('description', 'Unknown error')
            print(f"   ‚úó –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞: {error_desc}")
            
            if "chat not found" in error_desc.lower():
                print("\n   üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("      ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Channel ID")
                print("      ‚Ä¢ –î–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: @channelname")
                print("      ‚Ä¢ –î–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ: -100xxxxxxxxxx")
                print("\n   üìù –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID:")
                print("      1. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ @userinfobot")
                print("      2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @getidsbot")
            elif "forbidden" in error_desc.lower():
                print("\n   üí° –ë–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª:")
                print("      1. –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞")
                print("      2. Administrators ‚Üí Add Administrator")
                print("      3. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ")
            
            return False
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
        return False

def test_send_message(bot_token, channel_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    test_message = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Fragrantica News Bot\n\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚ú®"
    
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    
    try:
        response = requests.post(url, json={
            "chat_id": channel_id,
            "text": test_message
        }, timeout=10)
        
        result = response.json()
        
        if result.get('ok'):
            message_id = result['result']['message_id']
            print(f"   ‚úì –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   Message ID: {message_id}")
            print(f"\n   üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –ú–æ–∂–µ—Ç–µ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.")
            return True
        else:
            error_desc = result.get('description', 'Unknown error')
            print(f"   ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {error_desc}")
            
            if "have no rights to send a message" in error_desc.lower():
                print("\n   üí° –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É:")
                print("      1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª ‚Üí Info ‚Üí Administrators")
                print("      2. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
                print("      3. –í–∫–ª—é—á–∏—Ç–µ 'Post messages'")
            
            return False
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("="*60)
    print("üîç –¢–ï–°–¢ TELEGRAM –ù–ê–°–¢–†–û–ï–ö")
    print("="*60)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    bot_token = get_config('telegram_bot_token')
    channel_id = get_config('telegram_channel_id')
    
    if not bot_token:
        print("\n‚úó Telegram Bot Token –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_config.py")
        return
    
    if not channel_id:
        print("\n‚úó Telegram Channel ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_config.py")
        return
    
    print(f"\nBot Token: {bot_token[:10]}...{bot_token[-5:]}")
    print(f"Channel ID: {channel_id}")
    
    # –¢–µ—Å—Ç—ã
    token_ok = test_bot_token(bot_token)
    
    if not token_ok:
        print("\n" + "="*60)
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        print("="*60)
        return
    
    access_ok = test_channel_access(bot_token, channel_id)
    
    if not access_ok:
        print("\n" + "="*60)
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã—à–µ.")
        print("="*60)
        return
    
    send_ok = test_send_message(bot_token, channel_id)
    
    print("\n" + "="*60)
    if send_ok:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏:")
        print("  python publish_news.py <ID>")
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´")
        print("\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
        print("  python test_telegram.py")
    print("="*60)

if __name__ == '__main__':
    main()



